/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'eclipse-wtp'
apply plugin: 'java-library'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'

buildscript {
       repositories {
             jcenter()
       }
       dependencies {
             classpath 'com.bmuschko:gradle-tomcat-plugin:2.4.1'
       }
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


dependencies {
         def tomcatVersion = '8.0.46'
         tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
         "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
         "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
         api 'org.apache.commons:commons-math3:3.6.1'
         // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    	 implementation 'com.google.guava:guava:23.0'
    	 implementation 'org.apache.logging.log4j:log4j-api:2.10.0'
  		 implementation 'org.apache.logging.log4j:log4j-core:2.10.0'
         // Use JUnit test framework
    	 testImplementation 'junit:junit:4.12'         
}


tomcat {
         httpPort = 8080
         enableSSL = true
         contextPath = '/library-spring'
}
